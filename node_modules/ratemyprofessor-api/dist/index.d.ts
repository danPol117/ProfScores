export interface ISchoolSearch {
    cursor: string;
    node: {
        avgRatingRounded: number;
        city: string;
        departments: {
            id: string;
            name: string;
        }[];
        id: string;
        legacyId: number;
        name: string;
        numRatings: number;
        state: string;
        summary: {
            campusConditions: number;
            campusLocation: number;
            careerOpportunities: number;
            clubAndEventActivities: number;
            foodQuality: number;
            internetSpeed: number;
            libraryCondition: number;
            schoolReputation: number;
            schoolSafety: number;
            schoolSatisfaction: number;
            socialActivities: number;
        };
    };
}
export interface ITeacherSearch {
    cursor: string;
    node: {
        __typename: string;
        avgDifficulty: number;
        avgRating: number;
        department: string;
        firstName: string;
        id: string;
        isSaved: boolean;
        lastName: string;
        legacyId: number;
        numRatings: number;
        school: {
            id: string;
            name: string;
        };
        wouldTakeAgainPercent: number;
    };
}
export declare function searchProfessorsAtSchoolId(professorName: string, schoolId: string): Promise<ITeacherSearch[] | undefined>;
export declare function searchSchool(schoolName: string): Promise<ISchoolSearch[] | undefined>;
export interface IProfessorRating {
    avgRating: number;
    avgDifficulty: number;
    wouldTakeAgainPercent: number;
    numRatings: number;
    formattedName: string;
    department: string;
    link: string;
}
export declare function getProfessorRatingAtSchoolId(professorName: string, schoolId: string): Promise<IProfessorRating>;
